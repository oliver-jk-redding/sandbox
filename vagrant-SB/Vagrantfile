##################################################
# Generated by phansible.com
##################################################

#If your Vagrant version is lower than 1.5, you can still use this provisioning
#by commenting or removing the line below and providing the config.vm.box_url parameter,
#if it's not already defined in this Vagrantfile. Keep in mind that you won't be able
#to use the Vagrant Cloud and other newer Vagrant features.
Vagrant.require_version ">= 1.5"

# Check to determine whether we're on a windows or linux/os-x host,
# later on we use this to launch ansible in the supported way
# source: https://stackoverflow.com/questions/2108727/which-in-ruby-checking-if-program-exists-in-path-from-ruby
def which(cmd)
    exts = ENV['PATHEXT'] ? ENV['PATHEXT'].split(';') : ['']
    ENV['PATH'].split(File::PATH_SEPARATOR).each do |path|
        exts.each { |ext|
            exe = File.join(path, "#{cmd}#{ext}")
            return exe if File.executable? exe
        }
    end
    return nil
end

Vagrant.configure("2") do |config|

    config.vm.provider :virtualbox do |v|
        v.name = "universlabs-wp"
        v.customize [
            "modifyvm", :id,
            "--name", "universlabs-wp",
           "--memory", 4096,
           "--natdnshostresolver1", "on",
           "--cpus", 2,
           "--cpuexecutioncap", 75,
           "--pae", "on",
           "--hpet", "on",
           "--hwvirtex", "on",
           "--nestedpaging", "on",
           "--largepages", "on",
           "--vtxvpid", "on",
           "--vtxux", "on",
        ]
    end

    config.vm.box = "ubuntu/trusty64"
    
    # config.vm.network "forwarded_port", guest: 80, host: 4567
    # config.vm.network "forwarded_port", guest: 3306,  host: 33305
    config.vm.boot_timeout = 600
    config.vm.network :private_network, ip: "192.168.33.10"
    # config.vm.network 'public_network', ip: "172.16.2.146", bridge: "eth0"
    # config.hostsupdater.aliases = ['uni.dev', '*.uni.dev']
    config.vm.network 'public_network', ip: "172.16.2.145", bridge: "eth0"
    config.vm.hostname = 'universlabs-wp'
    config.hostsupdater.aliases = ['*.science-group.dev', 'otm.dev', '*.otm.dev', 'sagentia.dev', '*.sagentia.dev', 'oakland.dev', '*.oakland.dev', 'leatherhead.dev', '*.leatherhead.dev']
    config.ssh.forward_agent = true

    # If ansible is in your path it will provision from your HOST machine
    # If ansible is not found in the path it will be instaled in the VM and provisioned from there
    if which('ansible-playbook')
        config.vm.provision "ansible" do |ansible|
            ansible.playbook = "ansible/playbook.yml"
            ansible.inventory_path = "ansible/inventories/dev"
            ansible.limit = 'all'
        end
    else
        config.vm.provision :shell, path: "ansible/windows.sh", args: ["universlabs-wp"]
    end
    config.vm.provision :shell, :path => "install.sh"

    config.vm.synced_folder "./", "/vagrant", type: "nfs"
end
